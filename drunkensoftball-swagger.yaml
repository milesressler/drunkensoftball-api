swagger: '2.0'
info:
  version: 1.0.0
  description: |
    API documentation for Drunken Softball
  title: Drunken Softball API
  contact:
    email: miles.ressler@gmail.com
host: api.drunkensoftball.miles-smiles.us
basePath: /
schemes:
  - http
tags:
  - name: USER
    description: Operations for user and user authentication
  - name: TEAM
    description: Operations for team
  - name: ROSTER
    description: Operations for roster management
  - name: GAME
    description: Operations for game management and in-game stat tracking
paths:
  /user:
    post:
      tags:
        - USER
      summary: Register a new user account
      description: >
              Creates a new user account with a username and password.  This should be the first endpoint for a new user
      operationId: registerUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Registration data
          required: true
          schema:
            $ref: '#/definitions/CreateUserRequest'
      responses:
        '200':
          description: >-
          schema:
            $ref: '#/definitions/AuthenticationResponse'
    get:
      tags:
        - USER
      summary: Get user
      description: >
              Gets basic user info
      operationId: getUser
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: >-
          schema:
            $ref: '#/definitions/UserResponse'
      security:
        - api_key: []

  /auth/basic:
    post:
      tags:
        - USER
      summary: Login (Basic)
      description: >
              Generates a token authenticated user with username or email and password
      operationId: loginUserBasic
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Login credentials
          required: true
          schema:
            $ref: '#/definitions/AuthenticationRequest'
      responses:
        '200':
          description: >-
            Authenticated user and token returned
          schema:
            $ref: '#/definitions/AuthenticationResponse'
  /auth/google:
    post:
      tags:
        - USER
      summary: Login (Google)
      description: >
              Generates a token, and user if not existing, with Google JWT
      operationId: loginUserGoogle
      produces:
        - application/json
      parameters:
        - in: header
          name: X-Google-Authorization
          type: string
          required: true
          description: Google JWT
      responses:
        '200':
          description: >-
            Authenticated user and token returned
          schema:
            $ref: '#/definitions/AuthenticationResponse'
  /team:
    post:
      tags:
        - TEAM
      summary: Create team
      description: >
              Creates a new team
      operationId: createTeam
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Team data
          required: true
          schema:
            $ref: '#/definitions/TeamRequest'
      responses:
        '200':
          description: >-
          schema:
            $ref: '#/definitions/TeamResponse'
      security:
        - api_key: []
    get:
      tags:
        - TEAM
      summary: Get teams
      description: >
              Get all owned teams
      operationId: getTeams
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: >-
          schema:
            type: array
            items:
              $ref: '#/definitions/TeamResponse'
      security:
        - api_key: []
  /team/{uuid}:
    get:
      tags:
        - TEAM
      summary: Get team
      description: >
              Get team by uuid
      operationId: getTeam
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: uuid
          in: path
          description: Team UUID
          required: true
          type: string
      responses:
        '200':
          description: >-
          schema:
            $ref: '#/definitions/TeamResponse'
      security:
        - api_key: []
    put:
      tags:
        - TEAM
      summary: Update team
      description: >
              Update team by uuid
      operationId: updateTeam
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: uuid
          in: path
          description: Team UUID
          required: true
          type: string
        - in: body
          name: body
          description: Team data
          required: true
          schema:
            $ref: '#/definitions/TeamRequest'
      responses:
        '200':
          description: >-
          schema:
            $ref: '#/definitions/TeamResponse'
      security:
        - api_key: []
    delete:
      tags:
        - TEAM
      summary: Delete team
      description: >
              Delete team by uuid
      operationId: deleteTeam
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: uuid
          in: path
          description: Team UUID
          required: true
          type: string
      responses:
        '200':
          description: Successfully removed
      security:
        - api_key: []
  /roster:
    post:
      tags:
        - ROSTER
      summary: Add to roster
      description: >
              Creates a new user and adds them to the roster. No token will be generated, so user can't login unless manager shares a validation code so that account can be claimed
      operationId: addNewToRoster
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Roster data
          required: true
          schema:
            $ref: '#/definitions/RosterEntryRequest'
      responses:
        '200':
          description: >-
            Roster entry returned
          schema:
            $ref: '#/definitions/RosterEntryResponse'
      security:
        - api_key: []
  /game:
    post:
      tags:
        - GAME
      summary: Create game
      description: >
              Creates a new game
      operationId: createGame
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Game data
          required: true
          schema:
            $ref: '#/definitions/GameRequest'
      responses:
        '200':
          description: >-
            Game object returned
          schema:
            $ref: '#/definitions/GameResponse'
      security:
        - api_key: []
  /bat:
    post:
      tags:
        - GAME
      summary: Create/Update Bat results
      description: >
              Uploads a list of at-bat results.  Creates new if it doesn't exists, or updates if it does.
      operationId: createBattingResults
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Batting data
          required: true
          schema:
            $ref: '#/definitions/BatRequest'
      responses:
        '200':
          description: >-
            Returns the number of created and processed batting records
          schema:
            $ref: '#/definitions/BatResponse'
      security:
        - api_key: []
securityDefinitions:
  api_key:
    type: apiKey
    name: Authorization
    in: header
definitions:
  BaseObject:
    type: object
    properties:
      uuid:
        type: string
        example: 99998888-7777-6666-5555-111122223333
      created:
        type: number
        description: timestamp in milliseconds
      updated:
        type: number
        description: timestamp in milliseconds
  TeamRequest:
    type: object
    properties:
      name:
        type: string
  GameRequest:
    type: object
    properties:
      teamUuid:
        type: string
      opponentName:
        type: string
  CreateUserRequest:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
      firstName:
        type: string
      lastName:
        type: string
  AuthenticationRequest:
    type: object
    properties:
      user:
        type: string
      password:
        type: string
  UserCoreResponse:
    type: object
    properties:
      username:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      displayName:
        type: string
        description: concatenated first and last name, or else username if those are empty

  UserResponse:
    allOf:
    - $ref: '#/definitions/BaseObject'
    - $ref: '#/definitions/UserCoreResponse'
    - type: object
      properties:
        joinedTeams:
          type: array
          items:
            type: object
            properties:
              uuid:
                type: string
                example: 99998888-7777-6666-5555-111122223333
              created:
                type: number
                description: timestamp in milliseconds
              updated:
                type: number
                description: timestamp in milliseconds
              name:
                type: string
        managedTeams:
          type: array
          items:
            type: object
            properties:
              uuid:
                type: string
                example: 99998888-7777-6666-5555-111122223333
              created:
                type: number
                description: timestamp in milliseconds
              updated:
                type: number
                description: timestamp in milliseconds
              name:
                type: string

  AuthenticationResponse:
    type: object
    properties:
      token:
        type: string
        example: 99998888-7777-6666-5555-111122223333
      user:
        $ref: '#/definitions/UserResponse'
  TeamResponse:
    allOf:
      - $ref: '#/definitions/BaseObject'
      - type: object
        properties:
          name:
            type: string
          manager:
            $ref: '#/definitions/UserCoreResponse'
          roster:
            type: array
            items:
              $ref: '#/definitions/RosterEntryResponse'
  RosterEntryResponse:
    allOf:
      - $ref: '#/definitions/BaseObject'
      - type: object
        properties:
          fieldPosition:
            type: string
            enum:
              - catcher
              - first_base
              - second_base
              - short_stop
              - pitcher
              - infield
              - outfield
              - left_field
              - left_centerfield
              - centerfield
              - right_centerfield
              - right_field
              - rover
          battingPosition:
            type: number
          user:
            $ref: '#/definitions/UserCoreResponse'
  RosterEntryRequest:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
      teamUuid:
        type: string
      battingPosition:
        type: number
      fieldPosition:
        type: string
        enum:
          - catcher
          - first_base
          - second_base
          - short_stop
          - pitcher
          - infield
          - outfield
          - left_field
          - left_centerfield
          - centerfield
          - right_centerfield
          - right_field
          - rover
  GameResponse:
    allOf:
      - $ref: '#/definitions/BaseObject'
      - type: object
        properties:
          opponentName:
            type: string
          team:
            $ref: '#/definitions/TeamResponse'
  BatRequest:
    type: array
    items:
      type: object
      properties:
        gameUuid:
          type: string
        rosterUuid:
          type: string
        uniqueId:
          type: string
          description: unique ID generated by client to link up already uploaded items
        atBatResult:
          type: string
          enum:
            - hit_single
            - hit_double
            - hit_triple
            - hit_home_run
            - general_out
            - strikeout
            - pop_fly
            - tag_out
            - force_out
            - hit_by_pitch
            - fielders_choice
        rbis:
          type: number
          description: defaults to 0
  BatResponse:
    type: object
    properties:
      newCount:
        type: number
      processedCount:
        type: number
