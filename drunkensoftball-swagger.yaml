swagger: '2.0'
info:
  version: 1.0.0
  description: |
    API documentation for Drunken Softball
  title: Drunken Softball API
  contact:
    email: miles.ressler@gmail.com
host: api.drunkensoftball.miles-smiles.us
basePath: /
schemes:
  - http
tags:
  - name: USER
    description: Operations for user and user authentication
paths:
  /user:
    post:
      tags:
        - USER
      summary: Register a new user account
      description: >
              Creates a new user account with a username and password.  This should be the first endpoint for a new user
      operationId: registerUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Registration data
          required: true
          schema:
            $ref: '#/definitions/CreateUserRequest'
      responses:
        '200':
          description: >-
          schema:
            $ref: '#/definitions/AuthenticationResponse'
  /auth/basic:
    post:
      tags:
        - USER
      summary: Login (Basic)
      description: >
              Generates a token authenticated user with username or email and password
      operationId: loginUserBasic
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Login credentials
          required: true
          schema:
            $ref: '#/definitions/AuthenticationRequest'
      responses:
        '200':
          description: >-
            Authenticated user and token returned
          schema:
            $ref: '#/definitions/AuthenticationResponse'
  /auth/google:
    post:
      tags:
        - USER
      summary: Login (Google)
      description: >
              Generates a token, and user if not existing, with Google JWT
      operationId: loginUserGoogle
      produces:
        - application/json
      parameters:
        - in: header
          name: X-Google-Authorization
          type: string
          required: true
          description: Google JWT
      responses:
        '200':
          description: >-
            Authenticated user and token returned
          schema:
            $ref: '#/definitions/AuthenticationResponse'
  /team:
    post:
      tags:
        - TEAM
      summary: Create team
      description: >
              Creates a new team
      operationId: createTeam
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Team data
          required: true
          schema:
            $ref: '#/definitions/TeamRequest'
      responses:
        '200':
          description: >-
          schema:
            $ref: '#/definitions/TeamResponse'
      security:
        - api_key: []
    get:
      tags:
        - TEAM
      summary: Get teams
      description: >
              Get all owned teams
      operationId: getTeams
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: >-
          schema:
            type: array
            items:
              $ref: '#/definitions/TeamResponse'
      security:
        - api_key: []
  /team/{uuid}:
    get:
      tags:
        - TEAM
      summary: Get team
      description: >
              Get team by uuid
      operationId: getTeam
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: uuid
          in: path
          description: Team UUID
          required: true
          type: string
      responses:
        '200':
          description: >-
          schema:
            $ref: '#/definitions/TeamResponse'
      security:
        - api_key: []
    put:
      tags:
        - TEAM
      summary: Update team
      description: >
              Update team by uuid
      operationId: updateTeam
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: uuid
          in: path
          description: Team UUID
          required: true
          type: string
        - in: body
          name: body
          description: Team data
          required: true
          schema:
            $ref: '#/definitions/TeamRequest'
      responses:
        '200':
          description: >-
          schema:
            $ref: '#/definitions/TeamResponse'
      security:
        - api_key: []
    delete:
      tags:
        - TEAM
      summary: Delete team
      description: >
              Delete team by uuid
      operationId: deleteTeam
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: uuid
          in: path
          description: Team UUID
          required: true
          type: string
      responses:
        '200':
          description: Successfully removed
      security:
        - api_key: []
securityDefinitions:
  api_key:
    type: apiKey
    name: Authorization
    in: header
definitions:
  TeamRequest:
    type: object
    properties:
      name:
        type: string
  CreateUserRequest:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
      firstName:
        type: string
      lastName:
        type: string
  AuthenticationRequest:
    type: object
    properties:
      user:
        type: string
      password:
        type: string
  UserResponse:
    type: object
    properties:
      uuid:
        type: string
        example: 99998888-7777-6666-5555-111122223333
      created:
        type: number
        description: timestamp in milliseconds
      updated:
        type: number
        description: timestamp in milliseconds
      firstName:
        type: string
      lastName:
        type: string
      displayName:
        type: string
        description: concatenated first and last name, or else username if those are empty
      email:
        type: string
  AuthenticationResponse:
    type: object
    properties:
      token:
        type: string
        example: 99998888-7777-6666-5555-111122223333
      user:
        $ref: '#/definitions/UserResponse'
  TeamResponse:
    type: object
    properties:
      uuid:
        type: string
        example: 99998888-7777-6666-5555-111122223333
      created:
        type: number
        description: timestamp in milliseconds
      updated:
        type: number
        description: timestamp in milliseconds
      name:
        type: string
      manager:
        $ref: '#/definitions/UserResponse'
      roster:
        type: array
        items:
          $ref: '#/definitions/RosterEntry'
  RosterEntry:
    type: object
    properties:
      uuid:
        type: string
        example: 99998888-7777-6666-5555-111122223333
      created:
        type: number
        description: timestamp in milliseconds
      updated:
        type: number
        description: timestamp in milliseconds
      fieldPosition:
        type: string
        enum:
          - catcher
          - first_base
          - second_base
          - short_stop
          - pitcher
          - infield
          - outfield
          - left_field
          - left_centerfield
          - centerfield
          - right_centerfield
          - right_field
          - rover
      battingPosition:
        type: number
      user:
        $ref: '#/definitions/UserResponse'








